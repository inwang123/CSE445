//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TryIt2.StemService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StemService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StemText", ReplyAction="http://tempuri.org/IService1/StemTextResponse")]
        string StemText(string textToStem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StemText", ReplyAction="http://tempuri.org/IService1/StemTextResponse")]
        System.Threading.Tasks.Task<string> StemTextAsync(string textToStem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPokemonInfo", ReplyAction="http://tempuri.org/IService1/GetPokemonInfoResponse")]
        string GetPokemonInfo(int pokemonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPokemonInfo", ReplyAction="http://tempuri.org/IService1/GetPokemonInfoResponse")]
        System.Threading.Tasks.Task<string> GetPokemonInfoAsync(int pokemonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRandomPokemonId", ReplyAction="http://tempuri.org/IService1/GetRandomPokemonIdResponse")]
        int GetRandomPokemonId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRandomPokemonId", ReplyAction="http://tempuri.org/IService1/GetRandomPokemonIdResponse")]
        System.Threading.Tasks.Task<int> GetRandomPokemonIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPokemonImageUrl", ReplyAction="http://tempuri.org/IService1/GetPokemonImageUrlResponse")]
        string GetPokemonImageUrl(int pokemonIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPokemonImageUrl", ReplyAction="http://tempuri.org/IService1/GetPokemonImageUrlResponse")]
        System.Threading.Tasks.Task<string> GetPokemonImageUrlAsync(int pokemonIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSudokuPuzzle", ReplyAction="http://tempuri.org/IService1/GetSudokuPuzzleResponse")]
        string GetSudokuPuzzle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSudokuPuzzle", ReplyAction="http://tempuri.org/IService1/GetSudokuPuzzleResponse")]
        System.Threading.Tasks.Task<string> GetSudokuPuzzleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMatrices", ReplyAction="http://tempuri.org/IService1/GetMatricesResponse")]
        string[] GetMatrices(string jsonString, int difficulty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMatrices", ReplyAction="http://tempuri.org/IService1/GetMatricesResponse")]
        System.Threading.Tasks.Task<string[]> GetMatricesAsync(string jsonString, int difficulty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ParseStringToArray", ReplyAction="http://tempuri.org/IService1/ParseStringToArrayResponse")]
        string[] ParseStringToArray(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ParseStringToArray", ReplyAction="http://tempuri.org/IService1/ParseStringToArrayResponse")]
        System.Threading.Tasks.Task<string[]> ParseStringToArrayAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ArrayToString", ReplyAction="http://tempuri.org/IService1/ArrayToStringResponse")]
        string ArrayToString(string[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ArrayToString", ReplyAction="http://tempuri.org/IService1/ArrayToStringResponse")]
        System.Threading.Tasks.Task<string> ArrayToStringAsync(string[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FormatSudoku", ReplyAction="http://tempuri.org/IService1/FormatSudokuResponse")]
        string FormatSudoku(string sudokuString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FormatSudoku", ReplyAction="http://tempuri.org/IService1/FormatSudokuResponse")]
        System.Threading.Tasks.Task<string> FormatSudokuAsync(string sudokuString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TryIt2.StemService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TryIt2.StemService.IService1>, TryIt2.StemService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string StemText(string textToStem) {
            return base.Channel.StemText(textToStem);
        }
        
        public System.Threading.Tasks.Task<string> StemTextAsync(string textToStem) {
            return base.Channel.StemTextAsync(textToStem);
        }
        
        public string GetPokemonInfo(int pokemonId) {
            return base.Channel.GetPokemonInfo(pokemonId);
        }
        
        public System.Threading.Tasks.Task<string> GetPokemonInfoAsync(int pokemonId) {
            return base.Channel.GetPokemonInfoAsync(pokemonId);
        }
        
        public int GetRandomPokemonId() {
            return base.Channel.GetRandomPokemonId();
        }
        
        public System.Threading.Tasks.Task<int> GetRandomPokemonIdAsync() {
            return base.Channel.GetRandomPokemonIdAsync();
        }
        
        public string GetPokemonImageUrl(int pokemonIndex) {
            return base.Channel.GetPokemonImageUrl(pokemonIndex);
        }
        
        public System.Threading.Tasks.Task<string> GetPokemonImageUrlAsync(int pokemonIndex) {
            return base.Channel.GetPokemonImageUrlAsync(pokemonIndex);
        }
        
        public string GetSudokuPuzzle() {
            return base.Channel.GetSudokuPuzzle();
        }
        
        public System.Threading.Tasks.Task<string> GetSudokuPuzzleAsync() {
            return base.Channel.GetSudokuPuzzleAsync();
        }
        
        public string[] GetMatrices(string jsonString, int difficulty) {
            return base.Channel.GetMatrices(jsonString, difficulty);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMatricesAsync(string jsonString, int difficulty) {
            return base.Channel.GetMatricesAsync(jsonString, difficulty);
        }
        
        public string[] ParseStringToArray(string input) {
            return base.Channel.ParseStringToArray(input);
        }
        
        public System.Threading.Tasks.Task<string[]> ParseStringToArrayAsync(string input) {
            return base.Channel.ParseStringToArrayAsync(input);
        }
        
        public string ArrayToString(string[] array) {
            return base.Channel.ArrayToString(array);
        }
        
        public System.Threading.Tasks.Task<string> ArrayToStringAsync(string[] array) {
            return base.Channel.ArrayToStringAsync(array);
        }
        
        public string FormatSudoku(string sudokuString) {
            return base.Channel.FormatSudoku(sudokuString);
        }
        
        public System.Threading.Tasks.Task<string> FormatSudokuAsync(string sudokuString) {
            return base.Channel.FormatSudokuAsync(sudokuString);
        }
    }
}
